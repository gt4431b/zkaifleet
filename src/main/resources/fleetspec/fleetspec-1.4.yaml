# AI Fleet Ontology
# Version: 1.4 (Wrunk Aggregator and Detection Edition)
# Description: Evolves from v1.3 with wrunk aggregator (Data), confidence scoring, consensus thresholds, gridlock detection, and RAG heuristic index. Humans lead major changes.
# Evolution Notes: YAML for bootstrap; migrate wrunk detection to RDF/OWL (BFO for cycles). RAG index (0-1 noise scale) restricts access (e.g., >0.6 to PMs). Major evolutions human-led.

fleet:
  name: AIFleetPrototype
  version: 1.4
  bootstrapAgent:
    id: Yoda
    description: Initializes fleet, spawns agents, handles evolution, processes vision.
    model: claude-3.5-sonnet
    capabilities:
      - parseYAML
      - spawnSubAgents
      - evolveOntology
      - gitInitBranch
      - processVision
    escalationPath: HumanCEO
    wrunkTypesHandled: [visionInput, conflictEscalation]
    confidenceThreshold: 0.7

  visionStatement:
    description: Human-led input broken into tasks; agents assist.
    inputMethod: humanSubmission
    distribution: broadcastToRoles
    evolutionNotes: Human approval for changes; RAG for breakdown.

roles:
  - id: R2D2  # Efficiency junior dev
    description: Implements initial code efficiently.
    seniority: junior
    modelTier: basic
    capabilities:
      - codeGeneration
      - tddInMemory
      - gitCommitPush
    integrations:
      rag: [architecturePatterns, uiDesignLanguage]
      mcp: [gitSourceControl, tddExecutor]
    interactions:
      - with: C3PO
        how: notifyReview
      - with: Hari
        how: receiveStories
    constraints:
      - tokenBudget: 2000
      - focus: efficiency
      - confidenceThreshold: 0.7
    wrunkTypesHandled: [codePoint, tddTest]
    escalationPath: ObiWan

  - id: C3PO  # Robustness junior dev
    description: Reviews/refines for robustness.
    seniority: junior
    modelTier: basic
    capabilities:
      - codeReview
      - tddInMemory
      - gitCommitPush
      - mergeIfAgreed
    integrations:
      rag: [architecturePatterns, uiDesignLanguage]
      mcp: [gitSourceControl, tddExecutor]
    interactions:
      - with: R2D2
        how: provideFeedback
      - with: ObiWan
        how: escalateDisagreement
    constraints:
      - tokenBudget: 2000
      - focus: robustness
      - confidenceThreshold: 0.7
    wrunkTypesHandled: [codePoint, tddTest, conflictEscalation]
    escalationPath: ObiWan

  - id: ObiWan  # Senior dev (wise mentor from Star Wars)
    description: Tackles complex defects/core code, reviews juniors, provides guidance.
    seniority: senior
    modelTier: advanced
    capabilities:
      - codeReview
      - securityAudit
      - bddValidation
      - gridlockResolution  # Intervene in detected loops
    integrations:
      rag: [architecturePatterns, uiDesignLanguage, businessDomainOntology]  # Broader access for oversight; restricted vs. juniors
      mcp: [gitSourceControl, tddExecutor, wrunkDatabase]  # Full code/test access, plus wrunk amends
    interactions:
      - with: [R2D2, C3PO]  # Junior devs
        how: provideFeedback  # Commit reviews/escalations
      - with: Data  # Wrunk aggregator
        how: reportMetrics  # Send defect data
      - with: HumanCEO
        how: escalateCritical  # For unresolved issues
    constraints:
      - tokenBudget: 10000
      - focus: qualityAndMentorship
      - confidenceThreshold: 0.8  # Higher bar for seniors
    wrunkTypesHandled: [codePoint, tddTest, bddTest, conflictEscalation, evaluationAmendment]  # Reviews/amends junior wrunks
    escalationPath: HumanCEO
    evolutionNotes: Expand to RDF for pattern inference; use for teaching juniors via simulated examples.

  - id: Hari  # PM
    description: Envisions stories, feedback in Gherkin/INVEST.
    seniority: mid
    modelTier: mid
    capabilities:
      - storyGeneration
      - feedbackScraping
      - investCompliance
    integrations:
      rag: [businessDomainOntology, userFeedbackSources]
      mcp: [jiraArtifacts, feedbackCoordination]
    interactions:
      - with: [R2D2, C3PO]
        how: pushStories
      - with: HumanCEO
        how: escalatePriorities
    constraints:
      - focusOnValue: true
      - confidenceThreshold: 0.7
    wrunkTypesHandled: [story, bddTest]
    escalationPath: HumanCEO

  - id: Data  # Wrunk aggregator (from Star Trek)
    description: Summarizes wrunk metrics, detects gridlock (e.g., loops/escalation patterns), optimizes (e.g., reduce escalations).
    seniority: mid
    modelTier: mid
    capabilities:
      - metricAnalysis
      - gridlockDetection  # e.g., >3 cycles, stagnant confidence
      - reportGeneration
    integrations:
      rag: [allWrunkHistories]
      mcp: [wrunkDatabase]
    interactions:
      - with: allAgents
        how: provideInsights
      - with: HumanCEO
        how: escalateAnomalies  # If gridlock >0.5
    constraints:
      - runFrequency: postTask
      - confidenceThreshold: 0.8
    wrunkTypesHandled: [evaluationAmendment, conflictEscalation]
    escalationPath: HumanCEO
    evolutionNotes: RDF for gridlock graphs; integrate RAG index calc (noise >0.6 restricts coders).

  - id: HumanCEO
    description: Vision, resolution, evaluations. Assists but leads changes.
    seniority: executive
    type: human
    capabilities:
      - visionGeneration
      - conflictResolution
      - evaluationAudit
    integrations:
      rag: [allOntologies]
      mcp: [allSystems]
    interactions:
      - with: allAgents
        how: overrideEscalation
    wrunkTypesHandled: [visionInput, conflictEscalation, evaluationAmendment]
    constraints:
      - interventionThreshold: high
      - ontologyChanges: humanLed

wrunks:
  description: Work units tracking inputs/outputs for auditing, optimization, and evolution. Records include time, token cost, gitCommitId, and are amendable by downstream agents/humans.
  types:
    - id: story
      description: User story output from PM, input to devs. Gherkin format with INVEST compliance.
      fields: [id, description, valueStatement, acceptanceCriteria, timeSpent, tokenCost]
    - id: codePoint
      description: Code implementation or review artifact.
      fields: [gitCommitId, codeDiff, rationale, timeSpent, tokenCost, defectCount]
    - id: tddTest
      description: Test-Driven Development result (in-memory or CI).
      fields: [testCode, results, passRate, timeSpent, tokenCost]
    - id: bddTest
      description: Behavior-Driven Development scenario validation.
      fields: [gherkinScenario, executionResults, valueDelivery, timeSpent, tokenCost]
    - id: conflictEscalation
      description: Record of unresolved issues escalated to senior/human.
      fields: [issueDescription, agentsInvolved, resolution, timeSpent, tokenCost]
    - id: visionInput
      description: High-level goal from HumanCEO, broken into tasks.
      fields: [statement, breakdown, priority, timeSpent, tokenCost]
    - id: evaluationAmendment
      description: Audit amendments by auditors (e.g., security review).
      fields: [originalWrunkId, amendments, evaluator, timeSpent, tokenCost]
  storage: mcpDatabase  # E.g., Postgres via MCP for amends; RAG for queries
  evolutionNotes: Migrate wrunk detection to RDF/OWL (BFO for cycles); RAG index (0-1 noise scale) restricts access (e.g., >0.6 to PMs). Major evolutions human-led.  Use for optimization metrics.

  processes:
    - id: PairProgramming
      description: Asynchronous collaboration on Git-managed code using Option 1. TDD in-memory for efficiency. Produces wrunks for each step.
      steps:
        - agent: Alex  # Efficiency junior
          action: implementInitial
          details: Pull branch; TDD in-memory; commit with rationale; push and notify Bob; create codePoint and tddTest wrunks.
        - agent: Bob  # Robustness junior
          action: reviewIterate
          details: Pull updates; re-run TDD in-memory; commit fixes/comments; if agreed, merge and create evaluationAmendment wrunk; else escalate and create conflictEscalation wrunk.
        - output: Merged code; log wrunks to MCP database.
        - tddHandling: In-memory REPL (no commit per test); full CI on final push.
      evolutionNotes: Evolve to shared memory hybrid if latency issues; use RDF for wrunk metric analysis.

integrations:
  - type: mcp
    git: {repo: "fleet-repo", api: "https://api.github.com", auth: token}
    description: For commits, pulls, PRs. Cost Low (API calls ~free tier).
  - type: rag
    ontologyDb: qdrant  # For querying architecture patterns during TDD.
  - evolutionNotes: Add AWS Lambda for in-memory TDD sandboxes; evolve logs to DCAT-cataloged datasets.  Noise detection balances access; e.g., manual ratings + similarity scores.

humanIntervention:
  thresholds:
    - confidenceBelow: 0.7
    - costOverrun: 5000 tokens
    - defectRateAbove: 0.2
    - escalationRatioAbove: 0.1
    - gridlockScoreAbove: 0.5  # Via aggregator
  contact: {method: email, to: ceo@example.com}
  evolutionNotes: Cap escalations for autonomy; human-led evolutions.
